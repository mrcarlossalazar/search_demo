
import type { RelatedProductsWidgetDescription, RelatedProductsConnectorParams } from '../../connectors/related-products/connectRelatedProducts';
import type { Template, WidgetFactory, Hit } from '../../types';
import type { RecommendResultItem } from 'algoliasearch-helper';
import type { RecommendClassNames, RelatedProductsProps as RelatedProductsUiProps } from 'instantsearch-ui-components';
export type RelatedProductsCSSClasses = Partial<RecommendClassNames>;
export type RelatedProductsTemplates = Partial<{
    /**
     * Template to use when there are no results.
     */
    empty: Template<RecommendResultItem>;
    /**
     * Template to use for the header of the widget.
     */
    header: Template<Pick<Parameters<NonNullable<RelatedProductsUiProps<Hit>['headerComponent']>>[0], 'items'> & {
        cssClasses: RecommendClassNames;
    }>;
    /**
     * Template to use for each result. This template will receive an object containing a single record.
     */
    item: Template<Hit>;
}>;
type RelatedProductsWidgetParams = {
    /**
     * CSS selector or `HTMLElement` to insert the widget into.
     */
    container: string | HTMLElement;
    /**
     * Templates to customize the widget.
     */
    templates?: RelatedProductsTemplates;
    /**
     * CSS classes to add to the widget elements.
     */
    cssClasses?: RelatedProductsCSSClasses;
};
export type RelatedProductsWidget = WidgetFactory<RelatedProductsWidgetDescription & {
    $$widgetType: 'ais.relatedProducts';
}, RelatedProductsConnectorParams, RelatedProductsWidgetParams>;
declare const relatedProducts: RelatedProductsWidget;
export default relatedProducts;
